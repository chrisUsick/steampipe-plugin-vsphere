name: Release Steampipe Anywhere Components

on:
  workflow_call: {}
  workflow_dispatch: {}
  push:
    tags:
      - 'v*'


permissions:
  contents: write
  deployments: read
  packages: read       
jobs:
  build-postgres-15-fdw-linux-amd64:
    name: Build Postgres 15 FDW for Linux - AMD64
    runs-on: [linux]
    steps:
      - name: Set environment variables
        run: |
          plugin_name=$(echo $GITHUB_REPOSITORY | cut -d'-' -f 3)
          echo $plugin_name
          echo "PLUGIN_NAME=${plugin_name}" >> $GITHUB_ENV
          echo "TAG=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_ENV

      - name: Check out steampipe-postgres-fdw
        uses: actions/checkout@v4
        with:
          repository: "turbot/steampipe-postgres-fdw"
          ref: main

      - name: Setup GoLang
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      # - name: Setup go private modules 
        # run: git config --global url."https://$CICD_REPO_CLONE_TOKEN@github.com/".insteadOf https://github.com/

      - name: show git version
        run: git --version

      - name: Setup apt-get
        run: |-
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo env ACCEPT_EULA=Y apt-get update
          sudo env ACCEPT_EULA=Y apt-get upgrade -y
          sudo apt-get -y install ca-certificates curl

      - name: Install PostgreSQL15 Dev
        run: |-
          sudo apt-get -y install postgresql-server-dev-15

      - name: Find stuff and set env
        run: |-

          which pg_config
          pg_config --version

          export PATH=$(pg_config --bindir):$PATH
          export PGXS=$(pg_config --pgxs)

          export SERVER_LIB=$(pg_config --includedir)/15/server
          export INTERNAL_LIB=$(pg_config --includedir)/internal

          export CFLAGS="$(pg_config --cflags) -I${SERVER_LIB} -I${INTERNAL_LIB} -g"
          export PG_CFLAGS="$(pg_config --cflags) -I${SERVER_LIB} -I${INTERNAL_LIB} -g"

          export LDFLAGS=$(pg_config --ldflags)
          export PG_LDFLAGS=$(pg_config --ldflags)

          ls -la $SERVER_LIB
          ls -la $INTERNAL_LIB

      # - name: show gitconfig 
      #   run: cat ~/.gitconfig | grep ghp_ | base64

      - name: Build steampipe-postgres-fdw-anywhere
        run: |
          pwd
          ls -ltr
          make standalone plugin=${{ env.PLUGIN_NAME }} plugin_github_url=github.com/${{ github.repository }}
          ls -ltr

      - name: Rename and zip the build-Linux folder
        run: |-
          mv build-Linux steampipe_postgres_${{ env.PLUGIN_NAME }}.pg15.linux_amd64
          tar -czvf steampipe_postgres_${{ env.PLUGIN_NAME }}.pg15.linux_amd64.tar.gz steampipe_postgres_${{ env.PLUGIN_NAME }}.pg15.linux_amd64

      - name: Save Linux Build Artifact - AMD64
        uses: actions/upload-artifact@v3
        with:
          name: steampipe_postgres_${{ env.PLUGIN_NAME }}.pg15.linux_amd64.tar.gz
          path: steampipe_postgres_${{ env.PLUGIN_NAME }}.pg15.linux_amd64.tar.gz
          if-no-files-found: error